// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using redestro.Data;

#nullable disable

namespace redestro.Migrations
{
    [DbContext(typeof(CethiaContext))]
    partial class CethiaContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.7");

            modelBuilder.Entity("InstructeurTache", b =>
                {
                    b.Property<int>("InstructeursID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TachesTacheID")
                        .HasColumnType("INTEGER");

                    b.HasKey("InstructeursID", "TachesTacheID");

                    b.HasIndex("TachesTacheID");

                    b.ToTable("InstructeurTache");
                });

            modelBuilder.Entity("redestro.Models.Inscription", b =>
                {
                    b.Property<int>("InscriptionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("StagiaireID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TacheID")
                        .HasColumnType("INTEGER");

                    b.HasKey("InscriptionID");

                    b.HasIndex("StagiaireID");

                    b.HasIndex("TacheID");

                    b.ToTable("Inscription");
                });

            modelBuilder.Entity("redestro.Models.Instructeur", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateEmbauche")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("Prenom");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<int>("telephone")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Instructeur", (string)null);
                });

            modelBuilder.Entity("redestro.Models.Marche", b =>
                {
                    b.Property<int>("MarcheId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Budget")
                        .HasColumnType("Budget");

                    b.Property<DateTime>("DateDebut")
                        .HasColumnType("TEXT");

                    b.Property<int?>("InstructeurID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Libelle")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("MarcheId");

                    b.HasIndex("InstructeurID");

                    b.ToTable("Marches");
                });

            modelBuilder.Entity("redestro.Models.Notification", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Contenu")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DateEnvoi")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<int>("telephone")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Notification");
                });

            modelBuilder.Entity("redestro.Models.Stagiaire", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("DateInscription")
                        .HasColumnType("TEXT");

                    b.Property<string>("Nom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Prenom")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT")
                        .HasColumnName("Prenom");

                    b.Property<string>("email")
                        .HasColumnType("TEXT");

                    b.Property<int>("telephone")
                        .HasColumnType("INTEGER");

                    b.HasKey("ID");

                    b.ToTable("Stagiaire", (string)null);
                });

            modelBuilder.Entity("redestro.Models.Tache", b =>
                {
                    b.Property<int>("TacheID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Libelle")
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("MarcheId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Priorite")
                        .HasColumnType("INTEGER");

                    b.HasKey("TacheID");

                    b.HasIndex("MarcheId");

                    b.ToTable("Tache", (string)null);
                });

            modelBuilder.Entity("InstructeurTache", b =>
                {
                    b.HasOne("redestro.Models.Instructeur", null)
                        .WithMany()
                        .HasForeignKey("InstructeursID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redestro.Models.Tache", null)
                        .WithMany()
                        .HasForeignKey("TachesTacheID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("redestro.Models.Inscription", b =>
                {
                    b.HasOne("redestro.Models.Stagiaire", "Stagiaire")
                        .WithMany("Inscriptions")
                        .HasForeignKey("StagiaireID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("redestro.Models.Tache", "Tache")
                        .WithMany("Inscriptions")
                        .HasForeignKey("TacheID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Stagiaire");

                    b.Navigation("Tache");
                });

            modelBuilder.Entity("redestro.Models.Marche", b =>
                {
                    b.HasOne("redestro.Models.Instructeur", "Instructeur")
                        .WithMany()
                        .HasForeignKey("InstructeurID");

                    b.Navigation("Instructeur");
                });

            modelBuilder.Entity("redestro.Models.Tache", b =>
                {
                    b.HasOne("redestro.Models.Marche", "Marche")
                        .WithMany("Taches")
                        .HasForeignKey("MarcheId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Marche");
                });

            modelBuilder.Entity("redestro.Models.Marche", b =>
                {
                    b.Navigation("Taches");
                });

            modelBuilder.Entity("redestro.Models.Stagiaire", b =>
                {
                    b.Navigation("Inscriptions");
                });

            modelBuilder.Entity("redestro.Models.Tache", b =>
                {
                    b.Navigation("Inscriptions");
                });
#pragma warning restore 612, 618
        }
    }
}
